
ledTimer.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .data         00000000  00800100  00800100  00000198  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  1 .text         00000144  00000000  00000000  00000054  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .comment      00000030  00000000  00000000  00000198  2**0
                  CONTENTS, READONLY
  3 .note.gnu.avr.deviceinfo 00000040  00000000  00000000  000001c8  2**2
                  CONTENTS, READONLY
  4 .debug_aranges 00000040  00000000  00000000  00000208  2**0
                  CONTENTS, READONLY, DEBUGGING
  5 .debug_info   000007af  00000000  00000000  00000248  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_abbrev 00000694  00000000  00000000  000009f7  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_line   00000322  00000000  00000000  0000108b  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_frame  0000007c  00000000  00000000  000013b0  2**2
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_str    00000361  00000000  00000000  0000142c  2**0
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_loc    0000010a  00000000  00000000  0000178d  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_ranges 00000030  00000000  00000000  00001897  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
   0:	0c 94 34 00 	jmp	0x68	; 0x68 <__ctors_end>
   4:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>
   8:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>
   c:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>
  10:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>
  14:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>
  18:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>
  1c:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>
  20:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>
  24:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>
  28:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>
  2c:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>
  30:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>
  34:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>
  38:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>
  3c:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>
  40:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>
  44:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>
  48:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>
  4c:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>
  50:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>
  54:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>
  58:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>
  5c:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>
  60:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>
  64:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>

00000068 <__ctors_end>:
  68:	11 24       	eor	r1, r1
  6a:	1f be       	out	0x3f, r1	; 63
  6c:	cf ef       	ldi	r28, 0xFF	; 255
  6e:	d8 e0       	ldi	r29, 0x08	; 8
  70:	de bf       	out	0x3e, r29	; 62
  72:	cd bf       	out	0x3d, r28	; 61
  74:	0e 94 9b 00 	call	0x136	; 0x136 <main>
  78:	0c 94 a0 00 	jmp	0x140	; 0x140 <_exit>

0000007c <__bad_interrupt>:
  7c:	0c 94 00 00 	jmp	0	; 0x0 <__vectors>

00000080 <setup>:
	for(int i=5;i>=2;i--)
	{
		PORTB^=(1<<i);
		delay(1000);
	}
}
  80:	8c e3       	ldi	r24, 0x3C	; 60
  82:	84 b9       	out	0x04, r24	; 4
  84:	17 b8       	out	0x07, r1	; 7
  86:	8f ef       	ldi	r24, 0xFF	; 255
  88:	85 b9       	out	0x05, r24	; 5
  8a:	10 92 80 00 	sts	0x0080, r1	; 0x800080 <__TEXT_REGION_LENGTH__+0x7f8080>
  8e:	82 e0       	ldi	r24, 0x02	; 2
  90:	80 93 81 00 	sts	0x0081, r24	; 0x800081 <__TEXT_REGION_LENGTH__+0x7f8081>
  94:	10 92 85 00 	sts	0x0085, r1	; 0x800085 <__TEXT_REGION_LENGTH__+0x7f8085>
  98:	10 92 84 00 	sts	0x0084, r1	; 0x800084 <__TEXT_REGION_LENGTH__+0x7f8084>
  9c:	84 e1       	ldi	r24, 0x14	; 20
  9e:	90 e0       	ldi	r25, 0x00	; 0
  a0:	90 93 89 00 	sts	0x0089, r25	; 0x800089 <__TEXT_REGION_LENGTH__+0x7f8089>
  a4:	80 93 88 00 	sts	0x0088, r24	; 0x800088 <__TEXT_REGION_LENGTH__+0x7f8088>
  a8:	10 92 6f 00 	sts	0x006F, r1	; 0x80006f <__TEXT_REGION_LENGTH__+0x7f806f>
  ac:	08 95       	ret

000000ae <delay>:
  ae:	bc 01       	movw	r22, r24
  b0:	20 e0       	ldi	r18, 0x00	; 0
  b2:	30 e0       	ldi	r19, 0x00	; 0
  b4:	0a c0       	rjmp	.+20     	; 0xca <delay+0x1c>
  b6:	b1 9b       	sbis	0x16, 1	; 22
  b8:	fe cf       	rjmp	.-4      	; 0xb6 <delay+0x8>
  ba:	10 92 85 00 	sts	0x0085, r1	; 0x800085 <__TEXT_REGION_LENGTH__+0x7f8085>
  be:	10 92 84 00 	sts	0x0084, r1	; 0x800084 <__TEXT_REGION_LENGTH__+0x7f8084>
  c2:	92 e0       	ldi	r25, 0x02	; 2
  c4:	96 bb       	out	0x16, r25	; 22
  c6:	2f 5f       	subi	r18, 0xFF	; 255
  c8:	3f 4f       	sbci	r19, 0xFF	; 255
  ca:	94 e6       	ldi	r25, 0x64	; 100
  cc:	96 9f       	mul	r25, r22
  ce:	a0 01       	movw	r20, r0
  d0:	97 9f       	mul	r25, r23
  d2:	50 0d       	add	r21, r0
  d4:	11 24       	eor	r1, r1
  d6:	24 17       	cp	r18, r20
  d8:	35 07       	cpc	r19, r21
  da:	68 f3       	brcs	.-38     	; 0xb6 <delay+0x8>
  dc:	08 95       	ret

000000de <led_sequence1>:
void led_sequence1()
{
  de:	cf 93       	push	r28
  e0:	df 93       	push	r29
	for(int i=5;i>=2;i--)
  e2:	c5 e0       	ldi	r28, 0x05	; 5
  e4:	d0 e0       	ldi	r29, 0x00	; 0
  e6:	21 c0       	rjmp	.+66     	; 0x12a <led_sequence1+0x4c>
	{
		if((PINC&0x01)==0)//button pressed
  e8:	30 99       	sbic	0x06, 0	; 6
  ea:	0d c0       	rjmp	.+26     	; 0x106 <led_sequence1+0x28>
		{
			PORTB=0x00;
  ec:	15 b8       	out	0x05, r1	; 5
			PORTB|=(1<<i);
  ee:	25 b1       	in	r18, 0x05	; 5
  f0:	81 e0       	ldi	r24, 0x01	; 1
  f2:	90 e0       	ldi	r25, 0x00	; 0
  f4:	0c 2e       	mov	r0, r28
  f6:	02 c0       	rjmp	.+4      	; 0xfc <led_sequence1+0x1e>
  f8:	88 0f       	add	r24, r24
  fa:	99 1f       	adc	r25, r25
  fc:	0a 94       	dec	r0
  fe:	e2 f7       	brpl	.-8      	; 0xf8 <led_sequence1+0x1a>
 100:	82 2b       	or	r24, r18
 102:	85 b9       	out	0x05, r24	; 5
 104:	0d c0       	rjmp	.+26     	; 0x120 <led_sequence1+0x42>
		}
		else
		{
			PORTB=0xFF;
 106:	8f ef       	ldi	r24, 0xFF	; 255
 108:	85 b9       	out	0x05, r24	; 5
			PORTB^=(1<<i);
 10a:	25 b1       	in	r18, 0x05	; 5
 10c:	81 e0       	ldi	r24, 0x01	; 1
 10e:	90 e0       	ldi	r25, 0x00	; 0
 110:	0c 2e       	mov	r0, r28
 112:	02 c0       	rjmp	.+4      	; 0x118 <led_sequence1+0x3a>
 114:	88 0f       	add	r24, r24
 116:	99 1f       	adc	r25, r25
 118:	0a 94       	dec	r0
 11a:	e2 f7       	brpl	.-8      	; 0x114 <led_sequence1+0x36>
 11c:	82 27       	eor	r24, r18
 11e:	85 b9       	out	0x05, r24	; 5
		}
		delay(3000);
 120:	88 eb       	ldi	r24, 0xB8	; 184
 122:	9b e0       	ldi	r25, 0x0B	; 11
 124:	0e 94 57 00 	call	0xae	; 0xae <delay>
		delay(1000);
	}
}
void led_sequence1()
{
	for(int i=5;i>=2;i--)
 128:	21 97       	sbiw	r28, 0x01	; 1
 12a:	c2 30       	cpi	r28, 0x02	; 2
 12c:	d1 05       	cpc	r29, r1
 12e:	e4 f6       	brge	.-72     	; 0xe8 <led_sequence1+0xa>
			PORTB=0xFF;
			PORTB^=(1<<i);
		}
		delay(3000);
	}
}
 130:	df 91       	pop	r29
 132:	cf 91       	pop	r28
 134:	08 95       	ret

00000136 <main>:
int main(void)
{
	setup();
 136:	0e 94 40 00 	call	0x80	; 0x80 <setup>
	while (1)
	{
		led_sequence1();
 13a:	0e 94 6f 00 	call	0xde	; 0xde <led_sequence1>
 13e:	fd cf       	rjmp	.-6      	; 0x13a <main+0x4>

00000140 <_exit>:
 140:	f8 94       	cli

00000142 <__stop_program>:
 142:	ff cf       	rjmp	.-2      	; 0x142 <__stop_program>
